name: Maven Java CI 

on:
  push:
    branches:
      - upcoming-v4
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  build:

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      
    steps:

      - name: Source checkout
        uses: actions/checkout@v3
        with:
          # depth 0 means checkout all commits... we need that 
          # in case there are many commits in a push/PR
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Get directories with changes
        id: changed-files
        uses: tj-actions/changed-files@v35.9.2
        with:
          dir_names: true
          dir_names_max_depth: 2
          write_output_files: true

      - name: Build
        run: |
          mvn_cmd=$(bash .github/workflows/scripts/get-mvn-build-cmd.sh)
          echo "Maven build command: $mvn_cmd";
          eval $mvn_cmd;
        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Analyze
        run: |
          mvn_cmds=$(bash .github/workflows/scripts/get-mvn-analyze-cmds.sh)
          for mvn_cmd in $mvn_cmds; do
            echo "Maven analyze command: $mvn_cmd";
            eval $mvn_cmd;
          done          
        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
