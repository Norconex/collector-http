name: Maven Java CI 
#-------------------------------------------------------------------------------
# Copyright 2013-2017 Norconex Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------

on:
  push:
    branches:
      - upcoming-v4
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  build:

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      
    steps:

      - name: Source checkout
        uses: actions/checkout@v3
        with:
          # depth 0 means checkout all commits... we need that 
          # in case there are many commits in a push/PR
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Get directories with changes
        id: changed-files
        uses: tj-actions/changed-files@v35.9.2
        with:
          dir_names: true
          dir_names_max_depth: 2
          write_output_files: true

      - name: Build
        run: |
          mvn_cmd="$(bash .github/workflows/scripts/get-mvn-build-cmd.sh)"
          echo "Maven build command: $mvn_cmd"
          echo "${mvn_cmd}" | bash
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          
      - name: Analyze
        run: |
          mvn_cmds="$(bash .github/workflows/scripts/get-mvn-analyze-cmds.sh)"
          echo -e "${mvn_cmds}" | while IFS= read -r mvn_cmd
          do
            echo "${mvn_cmd}" | bash
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Deploy
        if: github.event_name == 'push'
        run: |
          mvn deploy:deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
