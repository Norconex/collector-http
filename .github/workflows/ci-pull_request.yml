#-------------------------------------------------------------------------------
# Copyright 2013-2017 Norconex Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------

name: CI - Pull Request 

on:
  pull_request:
    branches:
      - upcoming-v4
    types: [opened, synchronize, reopened]

jobs:

  prepare-build:
  
    uses: ./.github/workflows/shared/prepare-build.yml

  build:

    needs: prepare-build
    if: needs.prepare-build.steps.changed-files.outputs.any_changed == 'true'

#    runs-on: ubuntu-latest
#
#    permissions:
#      id-token: write
#      contents: read

    steps:

      - name: Get changed modules
        id: changed-modules
        run: |
          bash .github/workflows/scripts/changed-modules.sh
          echo "any_changed=$(cat .github/outputs/any-module-changed.txt)" >> $GITHUB_OUTPUT

      - name: Build
        if: steps.changed-modules.outputs.any_changed == 'true'
        run: |
          projectsArg=$(cat ".github/outputs/changed-module-artifacts.txt");
          if [ ! -z "$projectsArg" ]; then
             projectsArg="--projects $projectsArg"
          fi
          mvn -Dgpg.skip=true clean install ${projectsArg} -amd --batch-mode --threads=2

      - name: Analyze
        if: steps.changed-modules.outputs.any_changed == 'true'
        run: |
          dirs=$(cat ".github/outputs/changed-module-dirs-deps.txt");
          if [ -z "$dirs" ]; then
            dirs=$(cat ".github/outputs/all-module-dirs.txt");
          fi
          for dir in $dirs; do
              $(cd ${dir} && mvn sonar:sonar)
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
