name: commit test

on:
  push:
    branches: [ "dk-actions-v4" ]
  pull_request:
    branches: [ "dk-actions-v4" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write
    steps:

    - name: Check out repository
      uses: actions/checkout@v4

    - name: Expose git commit data
      uses: rlespinasse/git-commit-data-action@v1
        
    - name: Print git commit data
      run: |
        echo "Get commit info"
        echo " - ${{ env.GIT_COMMIT_SHA }}"
        echo " - ${{ env.GIT_COMMIT_SHORT_SHA }}"
        echo "Get author info"
        echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
        echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
        echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
        echo "Get committer info"
        echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
        echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
        echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
        echo "Get message info"
        echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
        echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
        echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"

    - name: check condition
      if: ${{ env.GIT_COMMIT_AUTHOR_NAME == 'null' }}
      run: echo "blank"

    - name: 2nd condition check
      if: ${{ env.GIT_COMMIT_AUTHOR_NAME != 'null' }}
      run: echo " @author ${{ env.GIT_COMMIT_AUTHOR_NAME }}"

    - uses: mshick/add-pr-comment@v2
      if: ${{ env.GIT_COMMIT_AUTHOR_NAME != 'null' }}
      with:
        message: |
          **Hello 1st** 
          ${{ env.GIT_COMMIT_AUTHOR_NAME }}

    - uses: mshick/add-pr-comment@v2
      with:
        message: |
          **Hello 2nd** 
          ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}
      
    
    - uses: mshick/add-pr-comment@v2
      with:
        message: |
          **Hello 3rd** 
          ${{ env.GIT_COMMIT_AUTHOR_NAME }}      