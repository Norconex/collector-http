#!/bin/bash
#-------------------------------------------------------------------------------
# Copyright 2013-2017 Norconex Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------

# If a push, returns a command that builds all modules.
# If a pull request, returns a command that will build modified projects
# and their dependents. If the Maven parent project itself 
# was modified, all modules will be built.
#
# Relies on  ./github/outputs/all_changed_files.txt to be present, 
# generated by 'tj-actions/changed-files' action.

# Expects 1 argument which is the GitHub Action trigger event name
# (e.g., "push", "pull_request"). 

if [ $# -eq 0 ]; then
    echo "Missing GitHub Action trigger event name argument.";
    exit -1; 
fi

GHA_EVENT=$1
mvn_projects=""
if [ $GHA_EVENT == "pull_request" ]; then
    OUTPUTS_DIR=.github/outputs
    CHANGED_DIRS_FILE=all_changed_files.txt
    
    # If Maven parent changed, build all, else, filter on changed projects
    parent_changed=$(cd $OUTPUTS_DIR && cat $CHANGED_DIRS_FILE \
        | grep -v -e ^committer -e ^importer -e ^crawler \
        | wc -l)
    
    if [ $parent_changed -eq 0 ]; then
        # Filter on modified artifacts
        artifacts=$(cd $OUTPUTS_DIR && cat $CHANGED_DIRS_FILE \
            | tr ' ' '\n' \
            | grep -e ^committer -e ^importer -e ^crawler \
            | sed 's_^\(committer\|crawler\)/\(.*\)$_:nx-\1-\2_' \
            | sed 's_^\(importer\)/.*$_:nx-\1_' \
            | sort \
            | uniq \
            | tr '\n' ' ')
        mvn_projects="--projects $artifacts"
    fi
fi

# Return command so it can be executed and logged by GHA workflow
echo "mvn clean install $mvn_projects -amd --batch-mode --threads=2";
